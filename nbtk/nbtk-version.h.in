#if !defined(NBTK_H_INSIDE) && !defined(NBTK_COMPILATION)
#error "Only <nbtk/nbtk.h> can be included directly.h"
#endif

/**
 * SECTION:nbtk-version
 * @short_description: Versioning utility macros
 *
 * Nbtk offers a set of macros for checking the version of the library
 * an application was linked to.
 */

#ifndef __NBTK_VERSION_H__
#define __NBTK_VERSION_H__

/**
 * NBTK_MAJOR_VERSION:
 *
 * The major version of the Nbtk clibrary (1 if %NBTK_VERSION is 1.2.3)
 */
#define NBTK_MAJOR_VERSION              (@NBTK_MAJOR_VERSION@)

/**
 * NBTK_MINOR_VERSION:
 *
 * The minor version of the Nbtk library (2, if %NBTK_VERSION is 1.2.3)
 */
#define NBTK_MINOR_VERSION              (@NBTK_MINOR_VERSION@)

/**
 * NBTK_MICRO_VERSION:
 *
 * The micro version of the Nbtk library (3, if %NBTK_VERSION is 1.2.3)
 */
#define NBTK_MICRO_VERSION              (@NBTK_MICRO_VERSION@)

/**
 * NBTK_VERSION_S:
 *
 * The full version of the Nbtk library, in string form (suited for
 * string concatenation)
 */
#define NBTK_VERSION_S                  "@NBTK_VERSION@"

/**
 * NBTK_VERSION_HEX:
 *
 * Numerically encoded version of the Nbtk library, like 0x010203
 */
#define NBTK_VERSION_HEX                (NBTK_MAJOR_VERSION << 24 | \
                                         NBTK_MINOR_VERSION << 16 | \
                                         NBTK_MICRO_VERSION <<  8)
/**
 * NBTK_CHECK_VERSION:
 * @major: major version, like 1 in 1.2.3
 * @minor: minor version, like 2 in 1.2.3
 * @micro: micro version, like 3 in 1.2.3
 *
 * Evaluates to %TRUE if the version of the Nbtk library is greater
 * than @major, @minor and @micro
 */
#define NBTK_CHECK_VERSION(major,minor,micro)   \
        (NBTK_MAJOR_VERSION > (major) || \
         (NBTK_MAJOR_VERSION == (major) && NBTK_MINOR_VERSION > (minor)) || \
         (NBTK_MAJOR_VERSION == (major) && NBRK_MINOR_VERSION == (minor) && NBTK_MICRO_VERSION >= (micro)))

#endif /* __NBTK_VERSION_H__ */
